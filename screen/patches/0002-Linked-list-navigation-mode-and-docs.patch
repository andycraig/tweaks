From 52e16ed3d6c05d4f50e83db34c8eee8bca4b0068 Mon Sep 17 00:00:00 2001
From: Navarum Eliskar <48705414+navarum.noreply.github.com>
Date: Wed, 20 Mar 2019 23:41:24 -0700
Subject: [PATCH 2/7] Linked-list navigation mode and docs

---
 src/comm.c             |  1 +
 src/display.c          |  1 +
 src/doc/screen.texinfo | 12 +++++++++
 src/extern.h           |  3 +++
 src/process.c          | 29 +++++++++++++++++++++
 src/screen.c           |  1 +
 src/window.c           | 59 ++++++++++++++++++++++++++++++++++++++++++
 src/window.h           |  3 +++
 8 files changed, 109 insertions(+)

diff --git a/src/comm.c b/src/comm.c
index 0934847..9049677 100644
--- a/src/comm.c
+++ b/src/comm.c
@@ -228,6 +228,7 @@ struct comm comms[RC_LAST + 1] =
 #ifdef MULTIUSER
   { "multiuser",	ARGS_1 },
 #endif
+  { "nav_mode",         ARGS_01 },
 #ifdef NETHACK
   { "nethack",		ARGS_1 },
 #endif
diff --git a/src/display.c b/src/display.c
index 9e09187..da23ac1 100644
--- a/src/display.c
+++ b/src/display.c
@@ -118,6 +118,7 @@ int defnonblock = -1;
 #ifdef AUTO_NUKE
 int defautonuke = 0;
 #endif
+int defnav_mode_fixed = 1;
 int captionalways;
 int hardstatusemu = HSTATUS_IGNORE;
 
diff --git a/src/doc/screen.texinfo b/src/doc/screen.texinfo
index 408305a..0b4e894 100644
--- a/src/doc/screen.texinfo
+++ b/src/doc/screen.texinfo
@@ -1423,6 +1423,18 @@ pressing space.)
 Switch to the previous window (the opposite of @kbd{C-a n}).
 @end deffn
 
+@deffn Command nav_mode fixed | floating
+Specifies the behavior of the @code{next} and @code{prev} commands.
+When @code{nav_mode fixed} (the default), the @code{next} and
+@code{prev} commands switch to the window with the next higher or
+lower window number, respectively.
+
+When @code{nav_mode floating}, the @code{next} and @code{prev}
+commands cycle through the windows in a sequence which is independent
+of window number. New windows are placed after the current window, and
+windows can be rearranged with the @code{insert} command.
+@end deffn
+
 @node Other Window, Select, Next and Previous, Selecting
 @section Other Window
 @kindex C-a
diff --git a/src/extern.h b/src/extern.h
index 3010670..6bc9c54 100644
--- a/src/extern.h
+++ b/src/extern.h
@@ -166,6 +166,9 @@ extern void   CarefulUtmp __P((void));
 # define CarefulUtmp()  /* nothing */
 #endif /* CAREFULUTMP */
 
+extern void NavRemove __P((struct win *wi));
+extern void NavInsert __P((struct win *wi, struct win *rel));
+extern void NavInit __P((struct win *wi));
 
 /* loadav.c */
 #ifdef LOADAV
diff --git a/src/process.c b/src/process.c
index 7f1a6e1..7639bfe 100644
--- a/src/process.c
+++ b/src/process.c
@@ -103,6 +103,7 @@ extern int VerboseCreate;
 #ifdef UTF8
 extern char *screenencodings;
 #endif
+extern int nav_mode_fixed;
 
 static int  CheckArgNum __P((int, char **));
 static void ClearAction __P((struct action *));
@@ -1106,6 +1107,19 @@ int key;
 	Msg(0, "Autonuke turned %s", D_auto_nuke ? "on" : "off");
       break;
 #endif
+    case RC_NAV_MODE:
+      if (*args == 0) {
+        Msg(0, "nav_mode is %s", (nav_mode_fixed?"fixed":"floating"));
+      } else {
+        if (strcmp(*args,"fixed")==0) {
+          nav_mode_fixed=1;
+        } else if(strcmp(*args,"floating")==0) {
+          nav_mode_fixed=0;
+        } else {
+          Msg(0, "nav_mode: argument must be \"fixed\" or \"floating\"");
+        }
+      }
+      break;
     case RC_DEFOBUFLIMIT:
       if (ParseNum(act, &defobuflimit) == 0 && msgok)
 	Msg(0, "Default limit set to %d", defobuflimit);
@@ -4605,6 +4619,10 @@ NextWindow()
   register struct win **pp;
   int n = fore ? fore->w_number : -1;
 
+  /* use nav linked list if we can */
+  if(fore && !nav_mode_fixed)
+    return fore->w_nav_next->w_number;
+
   for (pp = wtab + n + 1; pp != wtab + n; pp++)
     {
       if (pp == wtab + MAXWIN)
@@ -4621,6 +4639,10 @@ PreviousWindow()
   register struct win **pp;
   int n = fore ? fore->w_number : MAXWIN - 1;
 
+  /* use nav linked list if we can */
+  if(fore && !nav_mode_fixed)
+    return fore->w_nav_prev->w_number;
+
   for (pp = wtab + n - 1; pp != wtab + n; pp--)
     {
       if (pp < wtab)
@@ -4663,6 +4685,13 @@ struct win *wi;
   ASSERT(p);
   *pp = p->w_next;
   wi->w_inlen = 0;
+
+  /* take care of nav list */
+  NavRemove(wi);
+  if(last_info_window == wi->w_number) {
+    last_info_window = -1;
+  }
+
   wtab[wi->w_number] = 0;
 
   if (windows == 0)
diff --git a/src/screen.c b/src/screen.c
index 70741df..c86905a 100644
--- a/src/screen.c
+++ b/src/screen.c
@@ -199,6 +199,7 @@ int auto_detach = 1;
 int iflag, rflag, dflag, lsflag, quietflag, wipeflag, xflag;
 int cmdflag;
 int adaptflag;
+int nav_mode_fixed; /* 1 => order windows based on number */
 
 #ifdef MULTIUSER
 char *multi;
diff --git a/src/window.c b/src/window.c
index 3b60ae0..c5ae257 100644
--- a/src/window.c
+++ b/src/window.c
@@ -54,6 +54,7 @@ extern int ZombieKey_destroy, ZombieKey_resurrect;
 extern struct layer *flayer;
 extern int maxusercount;
 extern int pty_preopen;
+extern int nav_mode_fixed;
 #ifdef ZMODEM
 extern int zmodem_mode;
 extern struct mchar mchar_blank;
@@ -610,6 +611,34 @@ struct NewWindow *newwin;
     p->w_term = SaveStr(nwin.term);
 
   p->w_number = n;
+
+  /* update navigation list */
+  if(!nav_mode_fixed && fore) {
+    NavInsert(p,fore);
+  } else {
+    /* either the user is in nav_mode=fixed, or there is no window
+     * selected. in the first case we still want to have a valid
+     * linked list in case the user decides to activate
+     * nav_mode=floating. so we try to create a linked list with the
+     * same ordering as the wtab array. in the second case, choose the
+     * first window we find and insert after that.
+     */
+    int i;
+    i=n;
+    do {
+      if(wtab[i]) break;
+      if(i==0) i=MAXWIN;
+      i--;
+    } while(i!=n);
+    if(i==n || !wtab[i]) {
+      /* we are the first window, so initialize the nav list*/
+      NavInit(p);
+    } else {
+      /* insert our window after the first one with a lower number */
+      NavInsert(p,wtab[i]);
+    }
+  }
+
 #ifdef MULTIUSER
   /*
    * This is dangerous: without a display we use creators umask
@@ -1672,7 +1701,37 @@ struct win *w;
 
 #endif /* MULTIUSER */
 
+/******************************************************************/
+
+/* remove window from the nav linked list */
+void
+NavRemove(wi)
+struct win *wi;
+{
+  wi->w_nav_prev->w_nav_next = wi->w_nav_next;
+  wi->w_nav_next->w_nav_prev = wi->w_nav_prev;
+}
 
+/* insert window "wi" after "rel" in the nav linked list */
+void
+NavInsert(wi,rel)
+struct win *wi;
+struct win *rel; /* anchor */
+{
+  wi->w_nav_next = rel->w_nav_next;
+  wi->w_nav_prev = rel;
+  rel->w_nav_next->w_nav_prev = wi;
+  rel->w_nav_next = wi;
+}
+
+/* start a linked list with window */
+void
+NavInit(wi)
+struct win *wi;
+{
+  wi->w_nav_next = wi;
+  wi->w_nav_prev = wi;
+}
 
 /********************************************************************/
 
diff --git a/src/window.h b/src/window.h
index 6b59f2a..59b307a 100644
--- a/src/window.h
+++ b/src/window.h
@@ -126,6 +126,9 @@ struct paster;
 struct win 
 {
   struct win *w_next;		/* next window */
+
+  struct win *w_nav_next;
+  struct win *w_nav_prev;
   int    w_type;		/* type of window */
   void  *w_data;
   struct layer w_layer;		/* our layer */
-- 
2.21.0

